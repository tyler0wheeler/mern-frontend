{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","NavLinks","auth","useContext","to","exact","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.e6aea6f7.chunk.js","sourcesContent":["import { createContext} from 'react'\n\n export const AuthContext = createContext({\n        isLoggedIn: false,\n        token: null,\n        userId: null, \n        login: () => {}, \n        logout: () => {}\n    })","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer\nexport const useAuth = () => {\n  const [token, setToken] = useState(false)\n  const [tokenExpirationDate, setTokenExpirationDate] = useState()\n  const [userId, setUserId] = useState(false)\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token)\n    setUserId(uid)\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60)\n    setTokenExpirationDate(tokenExpirationDate)\n    localStorage.setItem(\n      'userData', \n      JSON.stringify({\n        userId: uid, \n        token: token, \n        expiration: tokenExpirationDate.toISOString()}))\n  }, [])\n\n  const logout = useCallback(() => {\n    setToken(null)\n    setUserId(null)\n    setTokenExpirationDate(null)\n    localStorage.removeItem('userData')\n  }, [])\n\n  useEffect(() => {\n    if (token && tokenExpirationDate){\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime()\n      logoutTimer = setTimeout(logout, remainingTime)\n    } else {\n      clearTimeout(logoutTimer)\n    }\n  },[token, logout, tokenExpirationDate])\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'))\n    if (\n      storedData && \n      storedData.token && \n      new Date(storedData.expiration) > new Date()\n      ){\n      login(storedData.userId, storedData.token, new Date(storedData.expiration))\n    }\n  }, [login])\n\n\n    return {token, login, logout, userId}\n}","import React, { useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport './NavLinks.css'\nimport { AuthContext } from '../../context/auth-context'\n\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n    return <ul className=\"nav-links\">\n        <li>\n            <NavLink to=\"/\" exact>ALL USERS</NavLink>\n        </li>\n        {auth.isLoggedIn && \n        <li>\n            <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n        }\n        {auth.isLoggedIn && \n        <li>\n            <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n        }\n        {!auth.isLoggedIn && \n        <li>\n            <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n        }\n        {auth.isLoggedIn && \n        <li>\n            <button onClick={auth.logout}>Logout</button>\n        </li>\n        }\n    </ul>\n}\n\nexport default NavLinks","import React from 'react'\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n    return <header className=\"main-header\">{props.children}</header>\n}\n\nexport default MainHeader","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nimport './SideDrawer.css'\n\nconst SideDrawer = props => {\n    const content = (\n    <CSSTransition \n    in={props.show} \n    timeout={200} \n    classNames=\"slide-in-left\" \n    mountOnEnter \n    unmountOnExit\n    >\n        <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n        </CSSTransition>\n    )\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\n    \n}\n\nexport default SideDrawer","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './MainNavigation.css';\nimport NavLinks from './NavLinks'\nimport MainHeader from './MainHeader'\nimport SideDrawer from './SideDrawer'\nimport Backdrop from '../UIElements/Backdrop'\n\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true)\n    }\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false)\n    }\n    return (\n        <React.Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} /> }           \n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n                <nav className=\"main-navigation__drawer-nav\">\n                    <NavLinks />\n                </nav>\n            </SideDrawer>\n            \n        <MainHeader>\n            <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n                <span/>\n                <span/>\n                <span/>\n            </button>\n            <h1 className=\"main-navigation__title\">\n                <Link to=\"/\"> Oh The Places We Go </Link>\n            </h1>\n            <nav className=\"main-navigation__header-nav\">\n                <NavLinks />\n            </nav>\n        </MainHeader>\n    </React.Fragment>\n    )\n}\n\nexport default MainNavigation","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\n\n// import Users from './user/pages/Users'\n// import NewPlace from './places/pages/NewPlace'\n// import UserPlaces from './places/pages/UserPlaces'\n// import UpdatePlace from './places/pages/UpdatePlace'\n// import Auth from './user/pages/Auth'\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport { AuthContext } from './shared/context/auth-context'\nimport { useAuth } from './shared/hooks/auth-hook'\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner'\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\n\nconst App = () => {\n const {token, login, logout, userId} = useAuth()\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n      <Route path=\"/\" exact>\n        <Users />\n      </Route>\n      <Route path=\"/:userId/places\" exact>\n        <UserPlaces />\n      </Route>\n      <Route path=\"/places/new\" exact>\n        <NewPlace />\n      </Route>\n      <Route path=\"/places/:placeId\">\n        <UpdatePlace />\n      </Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n      <Route path=\"/\" exact>\n        <Users />\n      </Route>\n      <Route path=\"/:userId/places\" exact>\n        <UserPlaces />\n      </Route>\n      <Route path=\"/auth\">\n        <Auth />\n      </Route>\n      <Redirect to=\"/auth\"/>\n      </Switch>\n    )\n  }\n\n  return (\n    <AuthContext.Provider value={\n      {\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId, \n        login: login, \n        logout: logout\n      }\n    }>\n    <Router>\n      <MainNavigation />\n      <main>  \n        <Suspense \n        fallback=\n        {<div className=\"center\">\n          <LoadingSpinner />\n          </div>}\n          >\n          {routes}\n        </Suspense>\n      </main>\n    </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}