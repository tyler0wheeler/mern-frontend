{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.5455467d.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react'\n\nimport './Input.css'\nimport { validate } from '../../util/validators'\n\nconst inputReducer = (state, action) => {\n    switch(action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH': {\n            return {\n                ...state,\n                isTouched: true\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '', \n        isValid: props.initialValid || false, \n        isTouched: false\n    })\n\n    const { id, onInput } = props\n    const{ value, isValid } = inputState\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput])\n\n    const changeHandler = event =>{\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value,\n            isTouched: false, \n            validators: props.validators})\n    };\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n\n    const element = props.element === 'input' ? \n    (<input id={props.id}\n        type={props.type} \n        placeholder={props.placeholder} \n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value} />\n        ) : \n        (<textarea id={props.id} \n        rows={props.rows || 3}\n        value={inputState.value}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        />)\n\n       \n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    )\n}\n\nexport default Input","import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true\n            for (const inputId in state.inputs){\n                if (!state.inputs[inputId]){\n                    continue;\n                }\n                if (inputId === action.inputId){\n                    formIsValid = formIsValid && action.isValid\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid}\n                },\n                isValid: formIsValid\n            };\n            case 'SET_DATA':\n                return {\n                    inputs: action.inputs,\n                    isValid: action.formIsValid\n                }\n        default:\n            return state\n    }\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({ \n        type: 'INPUT_CHANGE', \n        value: value, \n        isValid: isValid, \n        inputId: id})\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        })\n    }, [])\n\n    return [formState, inputHandler, setFormData]\n}","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './PlaceForm.css'\nimport Input from '../../shared/components/FormElements/Input'\nimport Button from '../../shared/components/FormElements/Button'\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators'\nimport { useForm } from '../../shared/hooks/form-hook' \nimport { useHttpClient } from '../../shared/hooks/http-hook'\nimport { AuthContext } from '../../shared/context/auth-context'\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload'\n\n\nconst NewPlace = () => {\n    const auth = useContext(AuthContext)\n    const { isLoading, error, sendRequest, clearError} = useHttpClient()\n    const [formState, inputHandler] = useForm({\n        title: {\n            value: '', \n            isValid: false\n        },\n        description: {\n            value: '', \n            isValid: false\n        },\n        address: {\n            value: '', \n            isValid: false\n        },\n        image: {\n            value: null,\n            isValid: false\n        }\n    }, false)\n\n    const history = useHistory()\n\n    const placeSubmitHandler = async event => {\n        event.preventDefault()\n        try{\n            const formData = new FormData()\n            formData.append('title', formState.inputs.title.value)\n            formData.append('description', formState.inputs.description.value)\n            formData.append('address', formState.inputs.address.value)\n            formData.append('image', formState.inputs.image.value)\n            await sendRequest(\n            process.env.REACT_APP_BACKEND_URL + '/places', \n            'POST', \n            formData,\n            {\n                Authorization: 'Bearer ' + auth.token\n            }\n        )\n             history.push('/')\n        } catch(err){\n            \n        }\n        \n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError}/>\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n                {isLoading && <LoadingSpinner asOverlay/>}\n                <Input\n                id =\"title\"  \n                element = \"input\"  \n                label=\"Title\" \n                validators ={[VALIDATOR_REQUIRE()]} \n                errorText =\"Please enter a valid title\"\n                onInput={inputHandler} \n                />\n                <Input\n                id =\"description\"  \n                element = \"textarea\" \n                label=\"Description\" \n                validators ={[VALIDATOR_MINLENGTH(5)]} \n                errorText =\"Please enter a valid description (at least 5 characters)\"\n                onInput={inputHandler} \n                />\n                <Input\n                id =\"address\"  \n                element = \"input\" \n                label=\"Address\" \n                validators ={[VALIDATOR_REQUIRE()]} \n                errorText =\"Please enter a valid address\"\n                onInput={inputHandler} \n                />\n                <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\"/>\n                <Button type=\"submit\" disabled={!formState.isValid}>ADD PLACE</Button>\n            </form>;\n        </React.Fragment>\n    )\n}\n\nexport default NewPlace;"],"sourceRoot":""}